global !p

def create_table(snip):
	rows = snip.buffer[snip.line].split('x')[0]
	cols = snip.buffer[snip.line].split('x')[1]

	int_val = lambda string: int(''.join(s for s in string if s.isdigit()))
	
	rows = int_val(rows)
	cols = int_val(cols)

	offset = cols + 1
	old_spacing = snip.buffer[snip.line][:snip.buffer[snip.line].rfind('\t') + 1]
	
	snip.buffer[snip.line] = ''
	
	final_str = old_spacing + "\\begin{tabular}{|" + "|".join(['$' + str(i + 1) for i in range(cols)]) + "|}\n"

	for i in range(rows):
		final_str += old_spacing + '\t'
		final_str += " & ".join(['$' + str(i * cols + j + offset) for j in range(cols)])

		final_str += " \\\\\\\n"

	final_str += old_spacing + "\\end{tabular}\n$0"

	snip.expand_anon(final_str)

def add_row(snip):
	row_len = int(''.join(s for s in snip.buffer[snip.line] if s.isdigit()))
	old_spacing = snip.buffer[snip.line][:snip.buffer[snip.line].rfind('\t') + 1]

	snip.buffer[snip.line] = ''
	
	final_str = old_spacing
	final_str += " & ".join(['$' + str(j + 1) for j in range(row_len)])
	final_str += " \\\\\\"

	snip.expand_anon(final_str)

endglobal

snippet ;con;
\begin{$1}
	$0
\end{$1}
endsnippet

snippet ;b;
\textbf{$1}$0
endsnippet

snippet ;em;
\emph{$1}$0
endsnippet

snippet ;i;
\textit{$1}$0
endsnippet

snippet ;u;
\underline{$1}$0
endsnippet

snippet ;frac;
\frac
	{$1}
	{$2}
$0
endsnippet

snippet ;ul;
\begin{itemize}
	$0
\end{itemize}
endsnippet

snippet ;des;
\begin{description}
	$0
\end{description}
endsnippet

snippet ;enum;
\begin{enumerate}
	$0
\end{enumerate}
endsnippet

snippet ;li;
\item $0
endsnippet

snippet ;nli;
\item[$1] $0
endsnippet

pre_expand "create_table(snip)"
snippet ";gentbl(\d+)x(\d+);" "Generate table of *width* x *height*" r  
endsnippet

pre_expand "add_row(snip)"
snippet ";tr(\d+);" "Add table row of dimension x" r
endsnippet
